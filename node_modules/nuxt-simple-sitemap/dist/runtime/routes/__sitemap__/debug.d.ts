import type { SitemapDefinition } from '../../types';
declare const _default: import("h3").EventHandler<import("h3").EventHandlerRequest, Promise<{
    nitroOrigin: any;
    sitemaps: Record<string, SitemapDefinition>;
    runtimeConfig: {
        version: string;
        isNuxtContentDocumentDriven: boolean;
        sitemaps: {
            index?: (Pick<SitemapDefinition, "sitemapName" | "_route"> & {
                sitemaps: import("../../types").SitemapIndexEntry[];
            }) | undefined;
        } & Record<string, Omit<SitemapDefinition, "urls" | "sources"> & {
            _hasSourceChunk?: boolean | undefined;
        }>;
        autoI18n?: import("../../types").AutoI18nConfig | undefined;
        isMultiSitemap: boolean;
        isI18nMapped: boolean;
        sitemapName: string;
        excludeAppSources: true | import("../../types").AppSourceContext[];
        sortEntries: boolean;
        defaultSitemapsChunkSize: number | false;
        xslColumns?: {
            label: string;
            width: `${string}%`;
            select?: string | undefined;
        }[] | undefined;
        xslTips: boolean;
        debug: boolean;
        discoverImages: boolean;
        autoLastmod: boolean;
        xsl: string | false;
        credits: boolean;
    };
    globalSources: import("../../types").SitemapSourceResolved[];
}>>;
export default _default;
